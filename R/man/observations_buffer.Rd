% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/observations_buffer.R
\name{reset}
\alias{reset}
\alias{publish_observation}
\alias{get_observations}
\alias{contains_observation}
\alias{get_status}
\alias{set_status}
\title{Observations buffer}
\usage{
reset()

publish_observation(observation)

get_observations(clazz = Observable, start = 0, end = Inf,
  filt = function(obs) TRUE, reverse = FALSE)

contains_observation(observation)

get_status()

set_status(status)
}
\arguments{
\item{observation}{An instance of \emph{Observable} or one of its subclasses.
See \link{Observable}.}

\item{clazz}{Only instances of the \emph{clazz} class (or any subclass) are
returned. The R function name (without parentheses and quotes) should
be used to specify the desired class. E.g., \emph{clazz = RR}.}

\item{start}{Only observations whose \emph{earlystart} attribute is after or
equal this parameter are returned.}

\item{end}{Only observations whose \emph{lateend} attribute is lower or equal
this parameter are returned.}

\item{filt}{A boolean function that accepts an observation as a parameter
acting as a filter. Only the observations satisfying this filter are returned.}

\item{reverse}{Boolean parameter. If TRUE, observations are returned in
reversed order, from last to first.}

\item{status}{A status among 'ACQUIRING' or 'STOPPED'.}
}
\value{
A wrapper around a python iterator. To iterate the observations, the
\code{\link[reticulate]{iterate}} or \code{\link[reticulate]{iter_next}} can
be used.
}
\description{
Global dynamic observations buffer for the interpretation
process, where all base evidence is published and made available to
all interpretations.
}
\section{Functions}{
\itemize{
\item \code{reset}: Resets the observations
buffer.

\item \code{publish_observation}: Adds a new piece of evidence to this global
observations buffer.
This observation must have a temporal location after any already published
observation.

\item \code{get_observations}: Obtains a list of observations matching the
search criteria, ordered by the earliest time of the observation.

\item \code{contains_observation}: Checks if an observation is in the
observations buffer.

\item \code{get_status}: Obtains the status of the observations buffer.

\item \code{set_status}: Changes the status of the observations buffer.
}}

